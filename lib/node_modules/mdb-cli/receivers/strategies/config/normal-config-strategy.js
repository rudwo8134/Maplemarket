"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NormalConfigStrategy = /** @class */ (function () {
    function NormalConfigStrategy(context, result) {
        this.context = context;
        this.result = result;
    }
    NormalConfigStrategy.prototype.setValue = function (name, value) {
        this._validate(name, value);
        var global = this._getGlobalFlag();
        this.context.mdbConfig.setValue(name, value, global);
        this.context.mdbConfig.save(process.cwd(), global);
    };
    NormalConfigStrategy.prototype.unsetValue = function (name) {
        var global = this._getGlobalFlag();
        this.context.mdbConfig.unsetValue(name, global);
        this.context.mdbConfig.save(process.cwd(), global);
    };
    NormalConfigStrategy.prototype._getGlobalFlag = function () {
        var flags = this.context.getParsedFlags();
        return flags.global ? flags.global : false;
    };
    NormalConfigStrategy.prototype._validate = function (name, value) {
        switch (name) {
            case 'packageManager':
                if (!['npm', 'yarn'].includes(value))
                    throw new Error('Invalid value, allowed package managers: npm, yarn');
                break;
            case 'publishMethod':
                if (!['ftp', 'pipeline'].includes(value))
                    throw new Error('Invalid value, allowed publish methods: ftp, pipeline');
                break;
            default:
                break;
        }
    };
    return NormalConfigStrategy;
}());
exports.default = NormalConfigStrategy;
