'use strict';
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var child_process_1 = __importDefault(require("child_process"));
var cli_status_1 = require("../../models/cli-status");
var PackageManager = /** @class */ (function () {
    function PackageManager() {
        this.isWindows = process.platform === 'win32';
    }
    PackageManager.prototype._task = function (args, successMsg, errorMsg, cwd) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var task = child_process_1.default.spawn(_this.cmdCommand, args, __assign({ cwd: cwd, stdio: 'inherit' }, (_this.isWindows && { shell: true })));
            task.on('error', function (error) { return reject(error); });
            task.on('exit', function (code) { return code === cli_status_1.CliStatus.SUCCESS ? resolve(successMsg) : reject(errorMsg); });
        });
    };
    return PackageManager;
}());
exports.default = PackageManager;
