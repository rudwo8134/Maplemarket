'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var command_1 = __importDefault(require("./command"));
var app_receiver_1 = __importDefault(require("../receivers/app-receiver"));
var VersionCommand = /** @class */ (function (_super) {
    __extends(VersionCommand, _super);
    function VersionCommand(context) {
        var _this = _super.call(this, context) || this;
        _this.receiver = new app_receiver_1.default(context);
        return _this;
    }
    VersionCommand.prototype.execute = function () {
        if (this.receiver.flags.help)
            return this.help();
        this.receiver.getVersion();
        this.printResult([this.receiver.result]);
    };
    VersionCommand.prototype.help = function () {
        this.results.addTextLine('Check currently installed version of MDB CLI');
        this.results.addTextLine('\nUsage: mdb [entity] version');
        this.results.addTextLine('\nAvailable entities: app (default)');
        this.printResult([this.results]);
    };
    return VersionCommand;
}(command_1.default));
module.exports = VersionCommand;
exports.default = VersionCommand;
