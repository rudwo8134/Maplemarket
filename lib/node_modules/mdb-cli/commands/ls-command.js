'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var command_1 = __importDefault(require("./command"));
var starter_receiver_1 = __importDefault(require("../receivers/starter-receiver"));
var frontend_receiver_1 = __importDefault(require("../receivers/frontend-receiver"));
var backend_receiver_1 = __importDefault(require("../receivers/backend-receiver"));
var wordpress_receiver_1 = __importDefault(require("../receivers/wordpress-receiver"));
var database_receiver_1 = __importDefault(require("../receivers/database-receiver"));
var order_receiver_1 = __importDefault(require("../receivers/order-receiver"));
var entity_1 = __importDefault(require("../models/entity"));
var LsCommand = /** @class */ (function (_super) {
    __extends(LsCommand, _super);
    function LsCommand(context) {
        var _this = _super.call(this, context) || this;
        _this.context = context;
        _this.checkFlags(context);
        _this.setReceiver(context);
        return _this;
    }
    LsCommand.prototype.execute = function () {
        return __awaiter(this, void 0, void 0, function () {
            var flags;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        flags = this.context.getParsedFlags();
                        if (flags.help)
                            return [2 /*return*/, this.help()];
                        if (!this.receiver) return [3 /*break*/, 2];
                        this.receiver.result.on('mdb.cli.live.output', function (msg) {
                            _this.printResult([msg]);
                        });
                        return [4 /*yield*/, this.receiver.list()];
                    case 1:
                        _a.sent();
                        this.printResult([this.receiver.result]);
                        return [3 /*break*/, 9];
                    case 2:
                        [
                            'starterReceiver',
                            'frontendReceiver',
                            'backendReceiver',
                            'wordpressReceiver',
                            'databaseReceiver',
                            'orderReceiver'
                        ].forEach(function (receiver) {
                            // @ts-ignore
                            _this[receiver].result.on('mdb.cli.live.output', function (msg) {
                                _this.printResult([msg]);
                            });
                        });
                        this.starterReceiver.result.addTextLine('\nStarters:');
                        return [4 /*yield*/, this.starterReceiver.list()];
                    case 3:
                        _a.sent();
                        this.frontendReceiver.result.addTextLine('\nFrontend projects:');
                        return [4 /*yield*/, this.frontendReceiver.list()];
                    case 4:
                        _a.sent();
                        this.backendReceiver.result.addTextLine('\nBackend projects:');
                        return [4 /*yield*/, this.backendReceiver.list()];
                    case 5:
                        _a.sent();
                        this.backendReceiver.result.addTextLine('\nWordPress projects:');
                        return [4 /*yield*/, this.wordpressReceiver.list()];
                    case 6:
                        _a.sent();
                        this.databaseReceiver.result.addTextLine('\nDatabases:');
                        return [4 /*yield*/, this.databaseReceiver.list()];
                    case 7:
                        _a.sent();
                        this.orderReceiver.result.addTextLine('\nOrders:');
                        return [4 /*yield*/, this.orderReceiver.list()];
                    case 8:
                        _a.sent();
                        this.printResult([
                            this.frontendReceiver.result,
                            this.backendReceiver.result,
                            this.wordpressReceiver.result,
                            this.databaseReceiver.result,
                            this.starterReceiver.result,
                            this.orderReceiver.result
                        ]);
                        _a.label = 9;
                    case 9: return [2 /*return*/];
                }
            });
        });
    };
    LsCommand.prototype.checkFlags = function (ctx) {
        if (this.entity === '') {
            var flags = ctx.getParsedFlags();
            if (!flags.all)
                this.entity = 'frontend';
        }
    };
    LsCommand.prototype.setReceiver = function (ctx) {
        switch (this.entity) {
            case entity_1.default.Starter:
                this.receiver = new starter_receiver_1.default(ctx);
                break;
            case entity_1.default.Frontend:
                this.receiver = new frontend_receiver_1.default(ctx);
                break;
            case entity_1.default.Backend:
                this.receiver = new backend_receiver_1.default(ctx);
                break;
            case entity_1.default.Wordpress:
                this.receiver = new wordpress_receiver_1.default(ctx);
                break;
            case entity_1.default.Database:
                this.receiver = new database_receiver_1.default(ctx);
                break;
            case entity_1.default.Order:
                this.receiver = new order_receiver_1.default(ctx);
                break;
            default:
                this.starterReceiver = new starter_receiver_1.default(ctx);
                this.frontendReceiver = new frontend_receiver_1.default(ctx);
                this.backendReceiver = new backend_receiver_1.default(ctx);
                this.wordpressReceiver = new wordpress_receiver_1.default(ctx);
                this.databaseReceiver = new database_receiver_1.default(ctx);
                this.orderReceiver = new order_receiver_1.default(ctx);
                break;
        }
    };
    LsCommand.prototype.help = function () {
        this.results.addTextLine('List entity content.');
        this.results.addTextLine('\nUsage: mdb [entity] ls');
        this.results.addTextLine('\nAvailable entities: starter, frontend (default), backend, wordpress, database, order');
        this.results.addTextLine('\nFlags:');
        this.results.addTextLine('  -a, --all  \tList all starters, projects, databases and orders.');
        this.results.addTextLine('  -o, --only \tSpecify the type of starters you want to display. Possible values: frontend, backend, wordpress');
        this.printResult([this.results]);
    };
    return LsCommand;
}(command_1.default));
module.exports = LsCommand;
exports.default = LsCommand;
